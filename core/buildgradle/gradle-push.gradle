apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.0.1"

// 定义两个链接，下面会用到。
def siteUrl = 'https://github.com/yinte12/network' // 项目主页。
def gitUrl = 'git@github.com:yinte12/network.git' // Git仓库的url。
// 唯一包名，比如compile 'com.od.network:an-aw-base:1.0.1'中的com.qydq就是这里配置的。
group = "com.od.network"
install {
    repositories.mavenInstaller {
        // 生成pom.xml和参数
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'Network for Android'// 可选，项目名称。
                description 'The Android build the framework of Http '// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。

                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'yinte12' // 开发者的id。
                        name 'yinte12' // 开发者名字。
                        email 'yinte112@163.com' // 开发者邮箱。
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl // Git仓库地址。
                    developerConnection gitUrl // Git仓库地址。
                    url siteUrl // 项目主页。
                }
            }
        }
    }
}

/*---build.gradle以下内容新增*/
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}


// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user") // Bintray的用户名。
    key = properties.getProperty("bintray.apikey") // Bintray刚才保存的ApiKey。
//    key = cf7cf5c92af8dec2293cb8ef78b9dd77af89d4ee

    configurations = ['archives']
    pkg {
        repo = "maven"  // 上传到maven库。（这里要特别注意，如果写了maven报404错误，请在bintray创建一个仓库，这里填改成你创建的仓库的名字，如何创建请看下图。）
        name = "network"  // 发布到Bintray上的项目名字，这里的名字不是compile 'cn.android.sunst:an-base:2.0.3'中的aw。
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。
    }
}
//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
//apply from: 'https://raw.githubusercontent.com/bingoogolapple/PublishAar/master/central-publish.gradle'