apply plugin: 'com.android.library'


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile rootProject.ext.dependencies["converter-gson"]
    compile (rootProject.ext.dependencies["adapter-rxjava"]) {
        exclude(group: 'io.reactivex', module:'rxjava')
    }


//    compile 'com.github.ihsanbal:LoggingInterceptor:1.0.4'
    compile (rootProject.ext.dependencies["logging-interceptor"])
    compile rootProject.ext.dependencies["okhttp"]

    compile rootProject.ext.dependencies["rxjava"]
    compile (rootProject.ext.dependencies["rxandroid"]) {
        exclude(group: 'io.reactivex', module:'rxjava')
    }
    compile rootProject.ext.dependencies["support-annotations"]
    compile (rootProject.ext.dependencies["tray"]) {
        exclude(group: 'com.android.support', module:'support-annotations')
    }

    testCompile rootProject.ext.dependencies["junit"]
    compile (rootProject.ext.dependencies["retrofit"]) {
        exclude(group: 'com.squareup.okhttp3', module:'okhttp')
    }

}